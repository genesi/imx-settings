# efikamx - Prepare modules and settings for Efika MX systems on boot

description	"Prepare modules and settings for Efika MX systems on boot"

start on (startup
	  and started udev)

emits efikamx

task

script
	machine=$(grep "^Hardware" /proc/cpuinfo | sed 's/Hardware\s*:\s*//')
	btype=$(grep "^Revision" /proc/cpuinfo | sed 's/Revision\s*:\s*//')

	case "${machine}" in
		"Genesi Efika MX (Smartbook)")
			board=efikasb
		;;
		"Genesi Efika MX (Smarttop)")
			board=efikamx
		;;
		*)
			exit 0
		;;
	esac

	case "${btype}" in
		"51020" | "51025")
			machine="${machine} (i.MX515 TO2)"
		;;

		"51030")
			machine="${machine} (i.MX515 TO3)"
		;;
	esac

	# needed for encrypted home directories
	if [ -f "/var/lib/dpkg/info/ecryptfs-utils.list" ]; then
		modprobe ecryptfs
	fi

	# handle the case where you want to hotplug the monitor and get SPDIF
	# but we do not load it on boot if there is no SPDIF by default since
	# it will possibly direct audio away from the internal speaker

	# ideally we could "reload" this service to get spdif to load if needed at any
	# time. it will stay loaded until reboot (and only load then if needed)

	if [ "${board}" = "efikamx" ]; then
		audio="none"
		if [ -f /sys/class/graphics/fb0/phys-link/audio ]; then
			audio=$(cat /sys/class/graphics/fb0/phys-link/audio)
		fi
		if [ -f /sys/class/graphics/fb0/audio ]; then
			audio=$(cat /sys/class/graphics/fb0/audio)
		fi
		if [ "xhdmi" = "x${audio}"]; then
			modprobe snd-spdif
		fi
	fi

	if [ "${board}" = "efikasb" ]; then
		modprobe cpufreq_ondemand
	fi

	# required modules for all systems
	if [ -f /lib/modules/`uname -r`/kernel/drivers/mxc/amd-gpu/gpu.ko ]; then	
		modprobe gpu
	fi
	if [ -f /lib/modules/`uname -r`/kernel/sound/soc/imx/snd-soc-imx-3stack-sgtl5000.ko ]; then	
		modprobe snd-soc-imx-3stack-sgtl5000
	fi

	# set up some compressed in-memory dynamic swap
	if [ -f /lib/modules/`uname -r`/kernel/drivers/staging/ramzswap/ramzswap.ko ]; then
		if [ ! -b /dev/ramzswap0 ]; then
			modprobe ramzswap disksize_kb=65536
			sleep 1
			mkswap -f /dev/ramzswap0
			swapon -p0 /dev/ramzswap0
		fi
	fi
end script
